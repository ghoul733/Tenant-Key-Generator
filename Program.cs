using System;
using System.IO;

namespace TenantKeyGenerator
{
    class Program
    {
        static void Main(string[] args)
        {

            string asciiArt = @"                                                                                                                                                                       
                                                  

 _____                       _                         ___                          _             
/__   \___ _ __   __ _ _ __ | |_    /\ /\___ _   _    / _ \___ _ __   ___ _ __ __ _| |_ ___  _ __ 
  / /\/ _ \ '_ \ / _` | '_ \| __|  / //_/ _ \ | | |  / /_\/ _ \ '_ \ / _ \ '__/ _` | __/ _ \| '__|
 / / |  __/ | | | (_| | | | | |_  / __ \  __/ |_| | / /_\\  __/ | | |  __/ | | (_| | || (_) | |   
 \/   \___|_| |_|\__,_|_| |_|\__| \/  \/\___|\__, | \____/\___|_| |_|\___|_|  \__,_|\__\___/|_|   
                                             |___/                                                                                               
                                                
_______________________________________________


";
            Console.WriteLine(asciiArt);


            bool satisfied = false;
            string randomName = "";

            Console.WriteLine("Enter the tenant name here:");
            string inputText = Console.ReadLine();

            randomName = GenerateRandomName(inputText);

            //Input required
            while (!satisfied)
            {

                if (string.IsNullOrEmpty(inputText) || inputText.Length < 4)
                {
                    Console.WriteLine("Input should be at least 4 characters long.");
                    continue;
                }

                Console.WriteLine("Tenant Key: " + randomName);

                Console.WriteLine("Are you satisfied with the generated tenant key? (Y/N)");

                string response = Console.ReadLine();

                if (response.ToUpper() == "Y")
                {
                    SaveTenantKey(randomName);
                    satisfied = true;
                }
                else if (response.ToUpper() == "N")
                {
                    randomName = GenerateRandomName(inputText);
                }
                else
                {
                    Console.WriteLine("Invalid input. Please type either Y or N.");
                }
            }

            Console.WriteLine("Press any key to exit...");
            Console.ReadKey();
        }

        //Main Function to generate tenant key
        static string GenerateRandomName(string inputText)
        {
            string firstFourChars = inputText.Substring(0, 4);
            string randomLetters = GenerateRandomLetters(4);

            return firstFourChars + randomLetters;

        }

static string GenerateRandomLetters(int length)
{
    Random random = new Random();
    string consonants = "bcdfghjklmnpqrstvwxyz";
    string vowels = "aeiou";
    string randomLetters = "";

    bool isVowelNext = random.Next(2) == 0; // Start with either a vowel or a consonant

    for (int i = 0; i < length; i++)
    {
        string characterSet = isVowelNext ? vowels : consonants;
        char randomLetter = characterSet[random.Next(characterSet.Length)];

        // Ensure that the last character generated alternates between consonants and vowels
        if (i == length - 1)
        {
            if ((isVowelNext && vowels.Contains(randomLetters.Last())) || (!isVowelNext && consonants.Contains(randomLetters.Last())))
            {
                // If the last character matches the expected type, generate the opposite type
                characterSet = isVowelNext ? consonants : vowels;
                randomLetter = characterSet[random.Next(characterSet.Length)];
            }
        }

        randomLetters += randomLetter;
        isVowelNext = !isVowelNext; // Toggle between vowels and consonants
    }

    return randomLetters;
}



        //Save tenant key to tenantKeylog file
        static void SaveTenantKey(string tenantKey)
        {
            string filePath = "tenantKeylog.txt";
            string logEntry = $"{DateTime.Now}: {tenantKey} Generated by: {Environment.UserName}";
            File.AppendAllText(filePath, logEntry + Environment.NewLine);
            Console.WriteLine("Tenant key saved to: " + filePath);
        }
    }
}
